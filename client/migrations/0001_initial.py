# Generated by Django 2.2.7 on 2019-12-04 22:36

import client.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('recruit', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('members', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Чат',
                'verbose_name_plural': 'Чаты',
            },
        ),
        migrations.CreateModel(
            name='Children',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('children_word', models.CharField(max_length=4)),
            ],
            options={
                'verbose_name': 'Дети',
                'verbose_name_plural': 'Дети',
            },
        ),
        migrations.CreateModel(
            name='Citizenship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_word', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Страна / Гражданство',
                'verbose_name_plural': 'Страна / Гражданство',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_word', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patronymic', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Отчество')),
                ('date_born', models.DateField(blank=True, null=True)),
                ('street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Улица')),
                ('house', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер дома')),
                ('flat', models.CharField(blank=True, max_length=10, null=True, verbose_name='Квартира')),
                ('telegram_link', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ник в телеграмме')),
                ('link_linkedin', models.URLField(blank=True, null=True)),
                ('skype', models.CharField(blank=True, max_length=100, null=True)),
                ('img', models.ImageField(blank=True, null=True, upload_to='')),
                ('is_reserved', models.BooleanField(default=False)),
                ('children', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.Children')),
                ('citizenship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citizenship', to='client.Citizenship')),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.City')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='country', to='client.Citizenship')),
            ],
        ),
        migrations.CreateModel(
            name='CvWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_word', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Должность',
                'verbose_name_plural': 'Должности',
            },
        ),
        migrations.CreateModel(
            name='Direction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('direction_word', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'Направление',
                'verbose_name_plural': 'Направления',
            },
        ),
        migrations.CreateModel(
            name='EducationWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('education_word', models.CharField(max_length=100, verbose_name='education_word')),
            ],
            options={
                'verbose_name': 'Учебное заведение',
                'verbose_name_plural': 'Учебные заведения',
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, max_length=3000, null=True, verbose_name='description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=client.models.file_path_image_employer)),
            ],
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Занятость',
                'verbose_name_plural': 'Занятость',
            },
        ),
        migrations.CreateModel(
            name='FamilyState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_word', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Семейное положение',
                'verbose_name_plural': 'Семейное положение',
            },
        ),
        migrations.CreateModel(
            name='Help',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(max_length=1000, verbose_name='Вопрос')),
                ('answer', models.TextField(max_length=1000, verbose_name='Ответ')),
            ],
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sex_word', models.CharField(max_length=1)),
            ],
            options={
                'verbose_name': 'Пол',
                'verbose_name_plural': 'Пол',
            },
        ),
        migrations.CreateModel(
            name='SkillsWord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills_word', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Навык',
                'verbose_name_plural': 'Навыки',
            },
        ),
        migrations.CreateModel(
            name='Sphere',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sphere_word', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Сфера деятельности',
                'verbose_name_plural': 'Сферы деятельности',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_word', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Стутус клиента',
                'verbose_name_plural': 'Стутус клиента',
            },
        ),
        migrations.CreateModel(
            name='TimeJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_job_word', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'График работы',
                'verbose_name_plural': 'График работы',
            },
        ),
        migrations.CreateModel(
            name='TypeSalary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_word', models.CharField(max_length=8)),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюта',
            },
        ),
        migrations.CreateModel(
            name='Vacancy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=100)),
                ('salary', models.CharField(max_length=20)),
                ('organization', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('employment', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, max_length=1000, null=True)),
                ('skills', models.CharField(blank=True, max_length=100, null=True)),
                ('requirements', models.TextField(blank=True, max_length=1000, null=True)),
                ('duties', models.TextField(blank=True, max_length=1000, null=True)),
                ('conditions', models.TextField(blank=True, max_length=1000, null=True)),
                ('creating_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('direction', models.ManyToManyField(blank=True, to='client.Direction', verbose_name='Направление')),
                ('employer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vacancies', to='client.Employer')),
            ],
        ),
        migrations.CreateModel(
            name='Telephone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telephone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('client_phone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=200)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, max_length=300)),
                ('status', models.BooleanField(default=False)),
                ('endtime', models.DateTimeField(blank=True, null=True)),
                ('checkstatus', models.BooleanField(default=True)),
                ('readtask', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubTasks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=100)),
                ('status', models.BooleanField(default=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtask', to='client.Tasks')),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(blank=True, max_length=100, null=True)),
                ('client_skills', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('messages', models.BooleanField(default=True)),
                ('tasks', models.BooleanField(default=True)),
                ('suggestions', models.BooleanField(default=True)),
                ('meetings', models.BooleanField(default=True)),
                ('reviews', models.BooleanField(default=True)),
                ('email_messages', models.BooleanField(default=True)),
                ('email_tasks', models.BooleanField(default=True)),
                ('email_suggestions', models.BooleanField(default=True)),
                ('email_meetings', models.BooleanField(default=True)),
                ('email_reviews', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Opinion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Тема')),
                ('text', models.TextField(max_length=3000, verbose_name='Текст отзыва')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата сообщения')),
                ('is_read', models.BooleanField(default=False, verbose_name='Прочитано')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.Chat', verbose_name='Чат')),
            ],
            options={
                'ordering': ['pub_date'],
            },
        ),
        migrations.CreateModel(
            name='JobInterviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Наименование')),
                ('jobinterviewtime', models.TimeField(max_length=10, verbose_name='Время проведения собеседования')),
                ('jobinterviewdate', models.DateField(max_length=20, verbose_name='Дата проведения собеседования')),
                ('interview_author', models.CharField(blank=True, max_length=50, null=True, verbose_name='Автор собеседования')),
                ('time_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('period_of_execution', models.DateTimeField(blank=True, null=True, verbose_name='Срок исполнения')),
                ('reminder', models.DateTimeField(blank=True, null=True, verbose_name='Напоминание')),
                ('position', models.CharField(max_length=50, verbose_name='Предполагаемая должность')),
                ('organization', models.CharField(max_length=50, verbose_name='Организация')),
                ('responsible_person', models.CharField(max_length=50, verbose_name='Ответственное лицо')),
                ('contact_responsible_person_1str', models.CharField(max_length=50, verbose_name='Контакты ответственного лица (1-я строчка)')),
                ('contact_responsible_person_2str', models.CharField(blank=True, max_length=50, null=True, verbose_name='Контакты ответственного лица (2-я строчка)')),
                ('location', models.CharField(max_length=50, verbose_name='Место проведения')),
                ('additional_information', models.TextField(blank=True, max_length=3000, null=True, verbose_name='Дополнительная информация')),
                ('status', models.BooleanField(default=False)),
                ('check_status', models.BooleanField(default=True)),
                ('readinterview', models.BooleanField(default=False)),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='client.Client', verbose_name='Соискатель')),
                ('vacancies', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='client.Vacancy', verbose_name='Вакансии')),
            ],
        ),
        migrations.CreateModel(
            name='FilesForJobInterviews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('add_file', models.FileField(blank=True, null=True, upload_to=client.models.file_path, verbose_name='Вложения')),
                ('jobinterviews_files', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files_for_jobinterview', to='client.JobInterviews')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='organisation')),
                ('position', models.CharField(blank=True, max_length=100, null=True, verbose_name='position')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='start_date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='end_date')),
                ('duties', models.TextField(blank=True, max_length=3000, null=True, verbose_name='duties')),
                ('client_exp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.Client')),
                ('sphere', models.ManyToManyField(to='client.Sphere', verbose_name='sphere')),
            ],
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(blank=True, max_length=100, null=True, verbose_name='institution')),
                ('subject_area', models.CharField(blank=True, max_length=100, null=True, verbose_name='Предметная область')),
                ('specialization', models.CharField(blank=True, max_length=100, null=True, verbose_name='Специализация')),
                ('qualification', models.CharField(blank=True, max_length=100, null=True, verbose_name='Квалификация')),
                ('date_start', models.DateField(blank=True, null=True, verbose_name='дата начала')),
                ('date_end', models.DateField(blank=True, null=True, verbose_name='дата окончания')),
                ('client_edu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.Client')),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('salary', models.CharField(blank=True, max_length=20, null=True)),
                ('client_cv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='client.Client')),
                ('direction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.Direction')),
                ('employment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.Employment')),
                ('notification', models.ManyToManyField(blank=True, related_name='notifications_for_resume', to='client.Vacancy')),
                ('time_job', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.TimeJob')),
                ('type_salary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.TypeSalary')),
                ('vacancies_accept', models.ManyToManyField(blank=True, related_name='accept_for_resume', to='client.Vacancy')),
                ('vacancies_in_waiting', models.ManyToManyField(blank=True, related_name='in_waiting_for_resume', to='client.Vacancy')),
                ('vacancies_reject', models.ManyToManyField(blank=True, related_name='reject_for_resume', to='client.Vacancy')),
            ],
        ),
        migrations.AddField(
            model_name='client',
            name='family_state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.FamilyState'),
        ),
        migrations.AddField(
            model_name='client',
            name='own_recruiter',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recruit.Recruiter'),
        ),
        migrations.AddField(
            model_name='client',
            name='resumes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.CV'),
        ),
        migrations.AddField(
            model_name='client',
            name='sex',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.Sex'),
        ),
        migrations.AddField(
            model_name='client',
            name='state',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='client.State'),
        ),
        migrations.AddField(
            model_name='client',
            name='user_client',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.ImageField(blank=True, null=True, upload_to='', verbose_name='certificate_img')),
                ('link', models.URLField(blank=True, max_length=100, null=True, verbose_name='certificate_link')),
                ('show_img', models.ImageField(blank=True, null=True, upload_to='')),
                ('education', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='client.Education')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(max_length=3000)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('opinion', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='client.Opinion')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
